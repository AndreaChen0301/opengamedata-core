{
    "level_range": {
        "min": 1,
        "max": 6
    },
    "events": {
        "game_state": {
            "level": {
                "type": "int",
                "description": "The current level when the event happens"
            },
            "current_stats": {
                "type": "Dict",
                "details": {
                    "endurance": "int",
                    "resourceful": "int",
                    "tech": "int",
                    "social": "int",
                    "trust": "int",
                    "research": "int"
                },
                "description": "The player's current stats for each attribute"
            },
            "location": {
                "type": "str",
                "description": "The current location of the player when the event happens"
            }
        },
        "event_data": {
            "text_click": {
                "description": "clicked to advance to the next text bubble",
                "node_id": {
                    "type": "str",
                    "description": "the node id containing the text"
                },
                "text_content": {
                    "type": "str",
                    "description": "the actual text content of the bubble"
                },
                "speaker": {
                    "type": "str",
                    "description": "the speaker_id of the character/entity who 'spoke' the text"
                }
            },
            "display_text_dialog": {
                "description": "a new dialog text bubble is displayed on the screen",
                "node_id": {
                    "type": "str",
                    "description": "the node id containing the text"
                },
                "text_content": {
                    "type": "str",
                    "description": "the actual text content of the bubble"
                },
                "speaker": {
                    "type": "str",
                    "description": "the speaker_id of the character/entity who 'spoke' the text"
                }
            },
            "display_breakdown_dialog": {
                "description": "during the editor review of a submitted story, the story composition/breakdown is displayed like a text bubble.",
                "final_breakdown": {
                    "type": "Dict",
                    "details": {
                        "color_weight": "int",
                        "facts_weight": "int",
                        "useful_weight": "int"
                    },
                    "description": "The color/fact/useful breakdown of the submitted story"
                },
                "target_breakdown": {
                    "type": "Dict",
                    "details": {
                        "color_weight": "int",
                        "facts_weight": "int",
                        "useful_weight": "int"
                    },
                    "description": "The target color/fact/useful breakdown assigned to the story"
                }
            },
            "display_quality_dialog": {
                "description": "during the editor review of a submitted story, the story quality is displayed like a text bubble.",
                "current_quality": {
                    "type": "List[Dict]",
                    "details": {
                        TODO: what are the attribute names?
                        "attribute_name": "str",
                        "type": "enum(BAD, GOOD, GREAT)"
                    },
                    "description": "The quality for each attribute "
                }
            },
            "display_feedback_dialog": {
                "description": "a new dialog text bubble is displayed on the screen during the editor's feedback on a submitted story",
                "node_id": {
                    "type": "str",
                    "description": "the node id containing the text"
                },
                "text_content": {
                    "type": "str",
                    "description": "the actual text content of the bubble"
                },
                "story_score": {
                    "type": "float",
                    "description": "calculated score based on overall quality"
                },
                "story_alignment": {
                    "type": "float",
                    "description": "score based on how well the player followed the target composition"
                }
            },
            "display_choices": {
                "context": "enum(CONVERSATION, LOCATION_MAP)"
            },
            "hub_choice_click": {
                "description": "clicked to choose a text option",
                "text_content": {
                    "type": "str",
                    "description": "The text contents of the choice button"
                },
                "node_id": {
                    "type": "str",
                    "description": ""
                },
                "next_node_id": {
                    "type": "str",
                    "description": ""
                },
                "next_location": {
                    "type": "Optional[str]",
                    "description": ""
                },
                "time_cost": {
                    "type": "int",
                    "description": ""
                },
                "time_cost_is_mystery": {
                    "type": "bool",
                    "description": ""
                }
            },
            "time_choice_click": {
                "description": "clicked to choose a text option",
                "text_content": {
                    "type": "str",
                    "description": ""
                },
                "current_node_id": {
                    "type": "str",
                    "description": ""
                },
                "next_node_id": {
                    "type": "str",
                    "description": ""
                },
                "time_cost": {
                    "type": "int",
                    "description": ""
                },
                "time_cost_is_mystery": {
                    "type": "bool",
                    "description": ""
                }
            },
            "location_choice_click": {
                "description": "clicked to choose a text option",
                "text_content": {
                    "type": "str",
                    "description": ""
                },
                "current_node_id": {
                    "type": "str",
                    "description": ""
                },
                "next_node_id": {
                    "type": "str",
                    "description": ""
                },
                "next_location": {
                    "type": "str",
                    "description": ""
                }
            },
            "once_choice_click": {
                "description": "clicked to choose a text option",
                "text_content": {
                    "type": "str",
                    "description": ""
                },
                "current_node_id": {
                    "type": "str",
                    "description": ""
                },
                "next_node_id": {
                    "type": "str",
                    "description": ""
                }
            },
            "continue_choice_click": {
                "description": "clicked to choose a text option",
                "text_content": {
                    "type": "str",
                    "description": ""
                },
                "current_node_id": {
                    "type": "str",
                    "description": ""
                }
            },
            "action_choice_click": {
                "description": "clicked to choose a text option",
                "text_content": {
                    "type": "str",
                    "description": ""
                },
                "current_node_id": {
                    "type": "str",
                    "description": ""
                }
            },
            "fallback_choice_click": {
                "description": "clicked to choose a text option",
                "text_content": {
                    "type": "str",
                    "description": ""
                },
                "current_node_id": {
                    "type": "str",
                    "description": ""
                },
                "next_node_id": {
                    "type": "str",
                    "description": ""
                }
            },
            "open_stats_tab": {
                "description": "",
                TODO
            },
            "close_stats_tab": {
                "description": ""
                TODO
            },
            "open_map_tab": {
                "description": "Event when the player opens their non-interactive map tab",
                "current_location": {
                    "type": "str",
                    "description": "The player's currently-displayed location on the map"
                },
                "locations_list": {
                    "type": "List[str]",
                    "description": "each string is a location ID for one of the locations currently shown on the map"
                }
            },
            "open_choice_map": {
                "description": "Event when the game displays a map during a choice dialog",
                "current_location": {
                    "type": "str",
                    "description": "The player's currently-displayed location on the map"
                },
                "locations_list": {
                    "type": "List[str]",
                    "description": "each string is a location ID for one of the locations currently shown on the map"
                }
            },
            "open_impact_map": {
                TODO
                "description": "",
                "feeback_ids": {
                    "type": "List[str]",
                    "description": ""
                },
                "feedback_texts": {
                    "type": "List[str]",
                    "description": ""
                }
            },
            "close_impact_map": {
                "description": ""
                TODO
            },
            "close_map_tab": {
                "description": ""
                TODO
            },
            "reached_checkpoint": {
                "description": "Event when player reaches a checkpoint",
                "node_id": {
                    "type": "str",
                    "description": ""
                }
            },
            "stat_update": {
                "description": "happens when a stat is updated",
                "node_id": {
                    "type": "str",
                    "description": ""
                },
                "stats": {
                    "type": "Dict[enum(ENDURANCE, RESOURCEFUL, TECH, SOCIAL, TRUST, RESEARCH), int]",
                    "description": "Mapping of stat types to change amounts"
                }
            },
            "change_background_image": {
                "description": "a change in the background image behind text",
                "node_id": {
                    "type": "str",
                    "description": ""
                }
            },
            "show_popup_image": {
                "description": "a change in popup image next to text",
                "is_animated": {
                    "type": "bool",
                    "description": ""
                },
                "node_id": {
                    "type": "str",
                    "description": ""
                }
            },
            "change_location": {
                "description": "a change in player location"
                TODO
            },
            "unlocked_notebook": {
                "description": "",
                TODO
            },
            "open_notebook": {
                TODO
                "description": "",
                "snippet_list": {
                    "type": "List[str]",
                    "description": "A list of snippet ids available on the left of the notebook"
                },
                "layout": {
                    "type": "List[Dict]",
                    "details": {
                        "type": "enum(ANY,PICTURE)",
                        "is_wide": "bool",
                        "assigned_snippet": "Optional[snippet_id]"
                    },
                    "description": "A list whose elements are 'slots', each with a type and the id of the currently-assigned snippet, if one is assigned."
                }
            },
            "select_snippet": {
                "description": "When a player selects a snippet in the notebook",
                "snippet_id": {
                    "type": "str",
                    "description": ""
                },
                "snippet_type": {
                    "type": "enum(IMAGE, QUOTE)",
                    "description": "Whether the given snippet is an image or a quote"
                },
                "snippet_quality": {
                    "type": "enum(BAD, GOOD, GREAT)",
                    "description": "good, bad, great"
                },
                "snippet_attribute": {
                    TODO
                    "type": "List[]",
                    "description": "color, facts, useful"
                }
            },
            "place_snippet": {
                TODO
                "layout": {},
                "location ": {
                    "type": "",
                    "description": ""
                },
                "snippet_id ": {
                    "type": "",
                    "description": "str"
                },
                "snippet_type": {
                    "type": "enum(IMAGE, QUOTE)",
                    "description": "image or quote"
                },
                "snippet_quality ": {
                    "type": "enum(BAD, GOOD, GREAT)",
                    "description": "good, bad, great"
                },
                "snippet_attribute": {
                    "type": "List[]",
                    "description": "color, facts, useful"
                }
            },
            "remove_snippet": {
                TODO
                layout: "",
                " location ": {
                    "type": "",
                    "description": ""
                },
                "snippet_id ": {
                    "type": "",
                    "description": "str"
                },
                "snippet_type": {
                    "type": "",
                    "description": "image or quote"
                },
                "snippet_quality ": {
                    "type": "",
                    "description": "good, bad, great, lousy"
                },
                "snippet_attribute ": {
                    "type": "",
                    "description": "List[] made up of color, facts, useful"
                }
            },
            "open_editor_note": {
                "current_breakdown": {
                    "type": "Dict",
                    "details": {
                        "color_weight": "int",
                        "facts_weight": "int",
                        "useful_weight": "int"
                    },
                    "description": "The color/fact/useful breakdown of the current story"
                },
                "target_breakdown": {
                    "type": "Dict",
                    "details": {
                        "color_weight": "int",
                        "facts_weight": "int",
                        "useful_weight": "int"
                    },
                    "description": "The target color/fact/useful breakdown assigned to the story"
                },
                "current_quality": {
                    "type": "List[Dict]",
                    "details": {
                        TODO: what are the attribute names?
                        "attribute_name": "str",
                        "type": "enum(BAD, GOOD, GREAT)"
                    },
                    "description": "The quality for each attribute "
                }
            },
            "close_editor_note": {
                "description": "",
                TODO
            },
            "end_notebook": {
                "description": "",
                TODO
            },
            "time_limit_assigned": {
                TODO
                "description": "",
                "how_long": {
                    "type": "timedelta",
                    "description": ""
                }
            },
            "open_timer": {
                TODO
                "description": "",
                "time_left": {
                    "type": "timedelta",
                    "description": ""
                }
            },
            "close_timer": {
                TODO
                "description": ""
            },
            "time_expired": {
                TODO
                "description": ""
            },
            "time_elapsed": {
                TODO
                "description": "",
                "how_much": {
                    "type": "int",
                    "description": ""
                }
            },
            "snippet_received": {
                TODO
                "description": ""
            },
            "story_updated": {
                "description": "Event when a snippet is placed or removed, changing the current story",
                "new_breakdown": {
                    "type": "Dict",
                    "details": {
                        "color_weight": "int",
                        "facts_weight": "int",
                        "useful_weight": "int"
                    },
                    "description": "The color/fact/useful breakdown of the submitted story"
                },
                "new_quality": {
                    "type": "List[Dict]",
                    "details": {
                        TODO: what are the attribute names?
                        "attribute_name": "str",
                        "type": "enum(BAD, GOOD, GREAT)"
                    },
                    "description": "The quality for each attribute "
                }
            },
            "publish_story_click": {
                "description": "When a player clicks to submit the story for publishing",
                TODO
                "snippet_layout_map": {
                    "description": "",
                }
                "unused_snippets": []
            },
            "open_published_story": {
                "description": "",
                TODO
            },
            "close_published_story": {
                "description": "",
                TODO
            },
            "start_level": {
                "description": "When a new level is started",
                "level_started": {
                    "type": "int",
                    "description": ""
                }
            },
            "complete_level": {
                "level_completed": {
                    "type": "int",
                    "description": ""
                }
            },
            "start_endgame": {
                "city_score": {
                    "type": "int",
                    "description": ""
                },
                "scenario": {
                    "type": "int",
                    "description": "1, 2, or 3"
                }
            }
        },
        "features": {
            "per_count": {},
            "aggregate": {}
        },
        "config": {
            "SUPPORTED_VERS": [
                1
            ]
        }
    }