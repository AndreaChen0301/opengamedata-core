{
    "level_range": { "min":0, "max":34 },

    "events":{
        "COMPLETE": {
            "event_custom":"string",
            "amplitude_left":"float",
            "wavelength_left":"float",
            "offset_left":"float",
            "amplitude_right":"float",
            "wavelength_right":"float",
            "offset_right":"float",
            "closeness":"float"
        },
        "SUCCEED": {
            "event_custom":"string",
            "amplitude_left":"float",
            "wavelength_left":"float",
            "offset_left":"float",
            "amplitude_right":"float",
            "wavelength_right":"float",
            "offset_right":"float",
            "closeness":"float"
        },
        "FAIL": {
            "event_custom":"string",
            "amplitude_left":"float",
            "wavelength_left":"float",
            "offset_left":"float",
            "amplitude_right":"float",
            "wavelength_right":"float",
            "offset_right":"float",
            "closeness":"float"
        },
        "RESET_BTN_PRESS": {
            "event_custom":"string",
            "amplitude_left":"float",
            "wavelength_left":"float",
            "offset_left":"float",
            "amplitude_right":"float",
            "wavelength_right":"float",
            "offset_right":"float",
            "closeness":"float"
        },
        "SLIDER_MOVE_RELEASE": {
            "event_custom":"string",
            "slider":{"enum": ["AMPLITUDE", "OFFSET", "WAVELENGTH"]},
            "wave":"string",
            "begin_val":"float",
            "end_val":"float",
            "min_val":"float",
            "max_val":"float",
            "ave_val":"float",
            "begin_closeness":"float",
            "end_closeness":"float",
            "drag_length_ticks":"int",
            "direction_shifts":"int",
            "stdev_val":"float",
            "correct_val":"float"
        },
        "ARROW_MOVE_RELEASE": {
            "event_custom":"string",
            "slider":"string",
            "wave":"string",
            "begin_val":"float",
            "end_val":"float",
            "closeness":"float",
            "correct_val":"float"
        },
        "QUESTION_ANSWER": {
            "event_custom":"string",
            "answer":"int",
            "answered":"int",
            "question":"int"
        },
        "MENU_BUTTON": {
            "event_custom":"string"
        },
        "SKIP_BUTTON": {
            "event_custom":"SKIP_BUTTON"
        },
        "DISMISS_MENU_BUTTON": {
            "event_custom":"DISMISS_MENU_BUTTON"
        }
    },

    "features": {
        "perlevel": {
            "totalSliderMoves": {
                "type" : "totalSliderMoves",
                "enabled": true,
                "events": ["SLIDER_MOVE_RELEASE"],
                "description": "slider moves across a given level [count of 'SLIDER_MOVE_RELEASE' events]"
            },
            "totalArrowMoves": {
                "enabled": true,
                "events": ["ARROW_MOVE_RELEASE"],
                "description": "arrow moves across a given level [count of 'ARROW_MOVE_RELEASE' events]"
            },
            "totalLevelTime": {
                "enabled": true,
                "events": ["BEGIN", "COMPLETE"],
                "description": "time spent on a level [sum of differences in time between 'BEGIN' and 'COMPLETE' event(s)]"
            },
            "sliderAvgStdDevs": {
                "enabled": true,
                "events": ["SLIDER_MOVE_RELEASE"],
                "description": "Average of stdev_val for all slider moves in a level"
            },
            "totalMoveTypeChanges": {
                "enabled": true,
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "number of times 'slider' changes across a level"
            },
            "sliderAvgRange": {
                "enabled": true,
                "events": ["SLIDER_MOVE_RELEASE"],
                "description": "difference between max and min values of a slider move, averaged together across a level"
            },
            "totalResets": {
                "enabled": true,
                "events": ["RESET_BTN_PRESS"],
                "description": "number of times the user pressed the 'reset' button across a level"
            },
            "totalFails": {
                "enabled": true,
                "events": ["FAIL"],
                "description": "number of 'Fail' events across a level"
            },
            "totalSkips": {
                "enabled": true,
                "events": ["SKIP_BUTTON"],
                "description": "number of times the player chose to skip the level (only allowed if they already completed the level once)"
            },
            "menuBtnCount": {
                "enabled": true,
                "events": ["MENU_BUTTON"],
                "description": "number of times the player returned to the main menu. [count of 'MENU_BUTTON' events]"
            },
            "beginCount": {
                "enabled": true,
                "events": ["BEGIN"],
                "description": "number of times a player 'began' the level. [count of 'BEGIN' events]"
            },
            "succeedCount": {
                "enabled": true,
                "events": ["SUCCEED"],
                "description": "number of times a 'SUCCEED' event occurs. [count of 'SUCCEED' events]"
            },
            "completeCount": {
                "enabled": true,
                "events": ["COMPLETE"],
                "description": "number of times a player 'completed' the level. [count of 'COMPLETE' events]"
            },
            "completed": {
                "enabled": true,
                "events": ["COMPLETE"],
                "description": "whether the level was completed or not [bool whether 'COMPLETE' event was found]"
            },
            "percentAmplitudeMoves": {
                "enabled": true,
                "events": [],
                "description": "percent of total moves that were amplitude adjustments in a level"
            },
            "percentOffsetMoves": {
                "enabled": true,
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "percent of total moves that were offset adjustments in a level"
            },
            "percentWavelengthMoves": {
                "enabled": true,
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "percent of total moves that were wavelength adjustments in a level"
            },
            "amplitudeGoodMoveCount": {
                "enabled": true,
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "number of amplitude moves that brought amplitude closer to the correct value"
            },
            "offsetGoodMoveCount": {
                "enabled": true,
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "number of offset moves that brought offset closer to the correct value"
            },
            "wavelengthGoodMoveCount": {
                "enabled": true,
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "number of wavelength moves that brought wavelength closer to the correct value"
            },
            "percentAmplitudeGoodMoves": {
                "enabled": true,
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "percent of amplitude moves that brought amplitude closer to the correct value"
            },
            "percentOffsetGoodMoves": {
                "enabled": true,
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "percent of wavelength moves that brought wavelength closer to the correct value"
            },
            "percentWavelengthGoodMoves": {
                "enabled": true,
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "percent of wavelength moves that brought wavelength closer to the correct value"
            },
            "firstMoveType": {
                "enabled": true,
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "A character indicating what type of slider move a player made first. A = Amplitude, W = Wavelength, O = Offset, null = No moves"
            },
            "closenessSlope": {
                "enabled": true,
                "events": [],
                "description": "The slope of the linear regression line of (closeness vs. time (seconds)) for the level"
            },
            "closenessIntercept": {
                "enabled": true,
                "events": [],
                "description": "The intercept of the linear regression line of (closeness vs. time (seconds)) for the level"
            },
            "closenessR2": {
                "enabled": true,
                "events": [],
                "description": "The R^2 of the linear regression line of (closeness vs. time (seconds)) for the level"
            },
            "rangeSlope": {
                "enabled": true,
                "events": [],
                "description": "The slope of the linear regression line of (range vs. time (seconds)) for the level, where range is the total range of moves (max-min in the case of a slider, abs(begin-end) in case of an arrow)"
            },
            "rangeIntercept": {
                "enabled": true,
                "events": [],
                "description": "The intercept of the linear regression line of (range vs. time (seconds)) for the level, where range is the total range of moves (max-min in the case of a slider, abs(begin-end) in case of an arrow)"
            },
            "rangeR2": {
                "enabled": true,
                "events": [],
                "description": "The R^2 of the linear regression line of (range vs. time (seconds)) for the level, where range is the total range of moves (max-min in the case of a slider, abs(begin-end) in case of an arrow)"
            }
        },
        "per_custom_count": {
            "questionAnswered" : {"count" : 4, "prefix": "QA", "desc" : "The answer the user gave to a given question (or -1 if unanswered)"},
            "questionCorrect"  : {"count" : 4, "prefix": "QA", "desc" : "0 if user answered the question incorrectly, 1 if answered correctly, -1 if unanswered"},
            "timeToAnswerMS"   : {"count" : 4, "prefix": "QA", "desc" : "The time, in milliseconds, taken by the player before answering the question"}
        },

        "aggregate":{
            "sessionID":"The player's session ID number for this play session",
            "persistentSessionID":"The session ID for the player's device, persists across multiple players using the same device.",
            "avgSliderMoves" : "totalSliderMoves averaged over all levels",
            "avgLevelTime" : "totalLevelTime averaged over all levels",
            "avgMoveTypeChanges" : "totalMoveTypeChanges averaged over all levels",
            "overallSliderAvgStdDevs" : "Average standard deviation of slider moves over a whole sessioin",
            "overallSliderAvgRange" : "Average range of slider moves over a whole session",
            "overallPercentAmplitudeMoves" : "Percent of total moves that were amplitude adjustments over a whole session",
            "overallPercentOffsetMoves" : "Percent of total moves that were offset adjustments over a whole session",
            "overallPercentWavelengthMoves" : "Percent of total moves that were wavelength adjustments over a whole session",
            "avgFails" : "totalFails averaged over all levels"
        }
    },

    "config": {
    	"SUPPORTED_VERS": [4]
	}
}