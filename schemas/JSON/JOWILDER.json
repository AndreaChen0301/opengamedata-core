{
  "events":{
    "checkpoint": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "startgame": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "save_code": "",
        "fullscreen": "",
        "music": "",
        "hq": "",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "quiz": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "questions": "array of question objects, each has question, response, and response_index",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "endgame": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "navigate_click": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "level": "enum for current checkpoint"
    },
    "notebook_click": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "page": "",
        "level": "enum for current checkpoint"
    },
    "map_click": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "notification_click": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "object_click": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "observation_click": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "person_click": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "cutscene_click": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "wildcard_click": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "correct": "correct answer to the problem (only exists for event name CHOICE) - sometimes doesn't exist??",
        "answer": "selected answer (only exists for event name CHOICE)",
        "level": "enum for current checkpoint"
    },
    "navigate_hover": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "start_time": "client side timestamp for the time the hover started",
        "end_time": "client side timestamp for the time the hover ended",
        "name": "event name enum",
        "level": "enum for current checkpoint",
        "answer": "selected answer (only exists for event name CHOICE) - sometimes doesn't exist??",
        "correct": "correct answer to the problem (only exists for event name CHOICE) - sometimes doesn't exist??"
    },
    "notebook_hover": {},
    "map_hover": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "start_time": "client side timestamp for the time the hover started",
        "end_time": "client side timestamp for the time the hover ended",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "notification_hover": {},
    "object_hover": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "start_time": "client side timestamp for the time the hover started",
        "end_time": "client side timestamp for the time the hover ended",
        "level": "enum for current checkpoint",
        "name": "event name enum - sometimes doesn't exist??"
    },
    "observation_hover": {},
    "person_hover": {},
    "cutscene_hover": {},
    "wildcard_hover": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "start_time": "client side timestamp for the time the hover started",
        "end_time": "client side timestamp for the time the hover ended",
        "name": "event name enum - sometimes doesn't exist??",
        "correct": "correct answer to the problem (only exists for event name CHOICE) - sometimes doesn't exist??",
        "answer": "selected answer (only exists for event name CHOICE) - sometimes doesn't exist??",
        "level": "enum for current checkpoint"
    }
},

    "features": {
        "perlevel":{
            "count_clicks": "Number of clicks",
            "count_hovers": "Number of hovers",
            "levelTimeToRead":"Total time spent reading text boxes in the level",
            "avgTimePerWord":"Time spent reading all text boxes in the level, divided by number of words",
            "avgTimePerTextBox":"Time spent reading all text boxes in the level, divided by number of text boxes",
            "stdevTimePerTextBox":"Standard deviation of time spent reading text boxes in the level",
            "percentBoxesSkipped":"Percent of text boxes in the level that were opened and closed within a very short time (i.e. skipped).",
            "time_in_level": "time_in_level",
            "meaningful_action_count": "number of navigation clicks on items/objects/people/portholes + number of clicks on map locations"
        },
        "per_custom_count": {
            "num_wrong_guesses": {
                "count": 19,
                "prefix": "Q",
                "desc": "number of wrong guesses for each assessment prompt"
            }
        },
        "aggregate":{
            "sessionID":"The player's session ID number for this play session",
            "persistentSessionID":"The session ID for the player's device, persists across multiple players using the same device.",
            "count_clicks": "Number of clicks throughout the game",
            "count_hovers": "Number of hovers throughout the game",
            "sessDuration": "Length of the session",
            "totalTimeToRead":"Total time spent reading text boxes over the whole game",
            "totalAvgTimePerWord":"Time spent reading all text boxes in the game, divided by number of words",
            "totalAvgTimePerTextBox":"Time spent reading all text boxes in the game, divided by number of text boxes",
            "totalStDevTimePerTextBox":"Standard deviation of time spent reading text boxes in the game"
        }
    },

    "db_columns": {
        "id":"Unique identifier for a row",
        "app_id":"A string identifying which game from which the event came",
        "app_id_fast":"A second version of the app id, to be removed",
        "app_version":"The version of the game from which the event came",
        "session_id":"Unique identifier for the gameplay session",
        "persistent_session_id":"Unique identifier across all gameplay sessions from a single computer",
        "level":"The game level in which the event was logged",
        "event":"The type of event logged",
        "event_custom":"A number corresponding to the game-specific event type for events labeled 'Custom'",
        "event_data_simple":"Unused (always=0), to be deleted",
        "event_data_complex":"Data specific to an event type, encoded as a JSON string",
        "client_time":"The client machine time when the event was generated",
        "client_time_ms":"Client time in milliseconds",
        "server_time":"The server machine time when the event was logged",
        "remote_addr":"The IP address for the player's computer",
        "req_id":"Another ID of some kind, to be removed",
        "session_n":"Counter of events in the session, from 0. A row with session_n = i is the (i+1)-th event of the session",
        "http_user_agent":"Data on the type of web browser, OS, etc. in use by the player"
    }
}