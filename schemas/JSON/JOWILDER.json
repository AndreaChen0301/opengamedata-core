{
    "events":{
    "CHECKPOINT": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "STARTGAME": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "save_code": "",
        "fullscreen": "",
        "music": "",
        "hq": "",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "ENDGAME": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "NAVIGATE_CLICK": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "level": "enum for current checkpoint"
    },
    "NOTEBOOK_CLICK": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "page": "",
        "level": "enum for current checkpoint"
    },
    "MAP_CLICK": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "NOTIFICATION_CLICK": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "OBJECT_CLICK": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "OBSERVATION_CLICK": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "PERSON_CLICK": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "CUTSCENE_CLICK": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "WILDCARD_CLICK": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "screen_coor": "x,y integer array of where the mouse is in current room",
        "room_coor": "x,y integer array of where the mouse is in the game screen",
        "name": "event name enum",
        "correct": "correct answer to the problem (only exists for event name CHOICE) - sometimes doesnt exist??",
        "answer": "selected answer (only exists for event name CHOICE)",
        "level": "enum for current checkpoint"
    },
    "NAVIGATE_HOVER": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "start_time": "client side timestamp for the time the hover started",
        "end_time": "client side timestamp for the time the hover ended",
        "name": "event name enum",
        "level": "enum for current checkpoint",
        "answer": "selected answer (only exists for event name CHOICE)- sometimes doesnt exist??",
        "correct": "correct answer to the problem (only exists for event name CHOICE)- sometimes doesnt exist??"
    },
    "NOTEBOOK_HOVER": {},
    "MAP_HOVER": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "start_time": "client side timestamp for the time the hover started",
        "end_time": "client side timestamp for the time the hover ended",
        "name": "event name enum",
        "level": "enum for current checkpoint"
    },
    "NOTIFICATION_HOVER": {},
    "OBJECT_HOVER": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "start_time": "client side timestamp for the time the hover started",
        "end_time": "client side timestamp for the time the hover ended",
        "level": "enum for current checkpoint",
        "name": "event name enum- sometimes doesnt exist??"
    },
    "OBSERVATION_HOVER": {},
    "PERSON_HOVER": {},
    "CUTSCENE_HOVER": {},
    "WILDCARD_HOVER": {
        "room_fqid": "fully qualified id of the room",
        "type": "type enum",
        "subtype": "subtype enum",
        "fqid": "fqid of the interaction, with the room_fqid subtracted",
        "event_custom": "event enum",
        "start_time": "client side timestamp for the time the hover started",
        "end_time": "client side timestamp for the time the hover ended",
        "name": "event name enum- sometimes doesnt exist??",
        "correct": "correct answer to the problem (only exists for event name CHOICE)- sometimes doesnt exist??",
        "answer": "selected answer (only exists for event name CHOICE)- sometimes doesnt exist??",
        "level": "enum for current checkpoint"
    }
},

    "features": {
        "perlevel":{
        },
        "per_custom_count": {
        },
        "aggregate":{
        }
    },

    "db_columns": {
        "id":"Unique identifier for a row",
        "app_id":"A string identifying which game from which the event came",
        "app_id_fast":"A second version of the app id, to be removed",
        "app_version":"The version of the game from which the event came",
        "session_id":"Unique identifier for the gameplay session",
        "persistent_session_id":"Unique identifier across all gameplay sessions from a single computer",
        "level":"The game level in which the event was logged",
        "event":"The type of event logged",
        "event_custom":"A number corresponding to the game-specific event type for events labeled 'Custom'",
        "event_data_simple":"Unused (always=0), to be deleted",
        "event_data_complex":"Data specific to an event type, encoded as a JSON string",
        "client_time":"The client machine time when the event was generated",
        "client_time_ms":"Client time in milliseconds",
        "server_time":"The server machine time when the event was logged",
        "remote_addr":"The IP address for the player's computer",
        "req_id":"Another ID of some kind, to be removed",
        "session_n":"Counter of events in the session, from 0. A row with session_n = i is the (i+1)-th event of the session",
        "http_user_agent":"Data on the type of web browser, OS, etc. in use by the player"
    }
}