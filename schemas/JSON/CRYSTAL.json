{
    "level_range": { "min":0, "max":8 },

    "events":{
        "COMPLETE":{
            "0":"int",
            "1":"int",
            "2":"int",
            "3":"int",
            "4":"int",
            "5":"int",
            "6":"int",
            "7":"int",
            "8":"int",
            "stability":{
                "pack":"int",
                "charge":"int"
            }
        },
        "BEGIN":{
            "stars_0":"int",
            "stars_1":"int",
            "stars_2":"int",
            "stars_3":"int",
            "stars_4":"int",
            "stars_5":"int",
            "stars_6":"int",
            "stars_7":"int",
            "stars_8":"int"
        },
        "MOLECULE_RELEASE":{
            "event_custom":"MOLECULE_RELEASE",
            "startPosition":{
                "coord_0":{
                    "x":"int",
                    "y":"int"
                },
                "coord_1":{
                    "x":"int",
                    "y":"int"
                },
                "coord_2":{
                    "x":"int",
                    "y":"int"
                },
                "comment":"may be more coords, not sure if upper limit exists"
            },
            "endPosition":{
                "coord_0":{
                    "x":"int",
                    "y":"int"
                },
                "coord_1":{
                    "x":"int",
                    "y":"int"
                },
                "coord_2":{
                    "x":"int",
                    "y":"int"
                },
                "comment":"may be more coords, not sure if upper limit exists"
            },
            "time":"float",
            "startStability":{"pack":"int","charge":"int"},
            "endStability":{"pack":"int","charge":"int"}
        },
        "MOLECULE_ROTATE":{
            "event_custom":"string",
            "isStamp":"bool",
            "startRotation":"int",
            "endRotation":"int",
            "numRotations":"int",
            "startStability":{
                "pack":"int",
                "charge":"int"
            },
            "endStability":{
                "pack":"int",
                "charge":"int"
            }
        },
        "CLEAR_BTN_PRESS":{
            "event_custom":"string",
            "numTimesPressed":"int",
            "numMolecules":"int",
            "stability":{
                "pack":"int",
                "charge":"int"
            }
        },
        "QUESTION_ANSWER":{
            "event_custom":"string",
            "answer":"int",
            "answered":"int",
            "question":"int"
        },
        "MUSEUM_CLOSE":{
            "event_custom":"string",
            "timeOpen":"float"
        },
        "BACK_TO_MENU":
        {
            "event_custom":"BACK_TO_MENU"
        }
    },

    "features": {
        "perlevel":{
            "eventCount":"Number of player events in the given level",
            "durationInSecs":"Time (in seconds) spent on the given level",
            "stampRotateCount":"Number of stamp rotate events in the level. These are MOLECULE_ROTATE events with isStamp set true.",
            "singleRotateCount":"Number of single rotation events in the level",
            "moleculeMoveCount":"Number of molecule move (MOLECULE_RELEASE) events in the level",
            "clearBtnPresses":"Number of times the clear button was pressed in the level",
            "avgMoleculeDragDurationInSecs":"The average number of seconds each drag took, over the given level",
            "finalScore":"The max final score given when submit button pressed, for this level, among all plays",
            "beginCount" : "number of times a player 'began' the level. [count of 'BEGIN' events]",
            "menuBtnCount" : "The number of times a player pressed the 'return to menu' button during a level",
            "completesCount":"The number of time the player (pressed the submit button)/(completed the level) in the level"
        },
        "per_custom_count": {
            "questionAnswered" : {"count" : 3, "prefix": "QA", "desc" : "The answer the user gave to a given question (or -1 if unanswered)"},
            "questionCorrect"  : {"count" : 3, "prefix": "QA", "desc" : "0 if user answered the question incorrectly, 1 if answered correctly, -1 if unanswered"}
        },
        "aggregate":{
            "sessionID":"The player's session ID number for this play session",
            "persistentSessionID":"The session ID for the player's device, persists across multiple players using the same device.",
            "sessionEventCount":"The total number of events across the entire session",
            "sessionDurationInSecs":"The total time (in seconds) spent over the entire session",
            "sessionStampRotateCount":"Total number of stamp rotation events over the session",
            "sessionSingleRotateCount":"Total number of single rotation events over the session",
            "sessionMoleculeMoveCount":"Total number of molecule move events over the session",
            "sessionClearBtnPresses":"Total number of times the clear button was pressed during the session",
            "sessionMuseumDurationInSecs":"Total amount of time spent in a museum during the session?"
        }
    },

    "db_columns": {
        "id":"Unique identifier for a row",
        "app_id":"A string identifying which game from which the event came",
        "app_id_fast":"A second version of the app id, to be removed",
        "app_version":"The version of the game from which the event came",
        "session_id":"Unique identifier for the gameplay session",
        "persistent_session_id":"Unique identifier across all gameplay sessions from a single computer",
        "player_id":"A custom, per-player ID, only exists if player entered an ID on one of our custom portal pages, else null",
        "level":"The game level in which the event was logged",
        "event":"The type of event logged",
        "event_custom":"A number corresponding to the game-specific event type for events labeled 'Custom'",
        "event_data_simple":"Unused (always=0), to be deleted",
        "event_data_complex":"Data specific to an event type, encoded as a JSON string",
        "client_time":"The client machine time when the event was generated",
        "client_time_ms":"Client time in milliseconds",
        "server_time":"The server machine time when the event was logged",
        "remote_addr":"The IP address for the player's computer",
        "req_id":"Another ID of some kind, to be removed",
        "session_n":"Counter of events in the session, from 0. A row with session_n = i is the (i+1)-th event of the session",
        "http_user_agent":"Data on the type of web browser, OS, etc. in use by the player"
    },
    "config": {
    	"SUPPORTED_VERS": [3]
	}
}